pipeline{
    agent any

    environment{
        registry = "sisoitherembo/"
        dockerImage = ''
        dockerhub = 'dockerhub-creds'
    }
    stages{
        stage('Cloning Git') {
            steps {
                git 'https://github.com/sisoitherembo/docker-devops-task.git'
            }
        }
        stage ("Build and push Apache-app"){
            steps{
                script{
                    dockerImage = docker.build(registry + "apache-app:latest", "-f ./apache-config/apache.dockerfile apache-config/")
                    docker.withRegistry( '', dockerhub ) {
                        dockerImage.push()
                    }
                }
            }
        }
    
        
        stage ("Build and push Nginx-app"){
            steps{
                script{
                    dockerImage = docker.build(registry + "nginx-app:latest", "-f ./nginx-config/nginx.dockerfile nginx-config/")
                    docker.withRegistry( '', dockerhub ) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage("Start our application"){
            steps{  
                script{
                    withCredentials([sshUserPrivateKey(credentialsId: 'ssh-host', keyFileVariable: 'KEYPAIR', usernameVariable: 'USER')]) {
                        sh 'scp -i -q $KEYPAIR Jenkins-pipeline/docker-compose-pipeline.yml $USER@18.222.46.64:~/docker-compose.yml'
                        sh 'ssh -i -q $KEYPAIR $USER@ec2-sisoi2.ddns.net -t "docker compose up -d"'
                    }
                }
            }
        }
    }
}