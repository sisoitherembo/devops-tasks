version: "3"

volumes: 
  prometheus_data: {}

networks:
  prometheus-net:

services: 
  prometheus:
    image: prom/prometheus:v2.38.0
    container_name: prometheus
    volumes: 
      - prometheus_data:/prometheus
      - ./prometheus/:/etc/prometheus
    ports:
      - "9090:9090"
    networks: 
      - prometheus-net
    restart: always
    env_file: prometheus/AWS_KEYS
    deploy: 
      mode: global

  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.3.1
    container_name: node-exporter
    volumes:
      - /:/rootfs:ro
      - /:/host:ro,rslave
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    command: 
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
    ports:
      - 9100:9100
    networks:
      - prometheus-net
    restart: always
    deploy:
      mode: global

  alert-manager:
    image: prom/alertmanager:v0.24.0
    container_name: alert-manager
    ports:
      - 9093:9093
    volumes:
      - ./alert-manager/:/etc/alertmanager/
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks: 
      - prometheus-net
    deploy: 
      mode: global
      
#  prometheus-bot:
#    image: sisoitherembo/telegram-bot:latest
#    container_name: prometheus-bot
#    volumes: 
#      - ./tg-alertbot/telegrambot/:/etc/telegrambot
#      - ./tg-alertbot/telegrambot/config.yaml:/config.yaml
#    ports: 
#      - "9087:9087"
#    networks:
#      - prometheus-net
#    restart: always
#    deploy: 
#      mode: global